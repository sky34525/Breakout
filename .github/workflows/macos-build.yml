name: macOS Build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 安装依赖
      run: |
        brew update
        brew install glfw glm pkg-config

    - name: 配置 CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: 编译项目
      run: |
        cd build
        make -j$(sysctl -n hw.ncpu)

    - name: 检查可执行文件
      run: |
        ls -lh build/Breakout
        file build/Breakout

    - name: 创建 App Bundle
      run: |
        mkdir -p "Breakout.app/Contents/MacOS"
        mkdir -p "Breakout.app/Contents/Resources"

        # 复制可执行文件
        cp build/Breakout "Breakout.app/Contents/MacOS/"

        # 复制资源文件
        cp -r shader "Breakout.app/Contents/Resources/"
        cp -r textures "Breakout.app/Contents/Resources/"
        cp -r game_level "Breakout.app/Contents/Resources/"

        # 复制应用图标
        cp Breakout.icns "Breakout.app/Contents/Resources/"

        # 创建 Info.plist
        cat > "Breakout.app/Contents/Info.plist" << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>Breakout</string>
            <key>CFBundleIdentifier</key>
            <string>com.breakout.game</string>
            <key>CFBundleName</key>
            <string>Breakout</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleIconFile</key>
            <string>Breakout.icns</string>
            <key>NSHighResolutionCapable</key>
            <true/>
        </dict>
        </plist>
        EOF

    - name: 对 App Bundle 进行临时签名
      run: |
        # 使用临时签名（ad-hoc signing）避免 macOS Gatekeeper 报错
        codesign --force --deep --sign - "Breakout.app"

    - name: 安装 create-dmg
      run: brew install create-dmg

    - name: 创建 DMG
      run: |
        create-dmg \
          --volname "Breakout" \
          --volicon "Breakout.icns" \
          --window-pos 200 120 \
          --window-size 600 400 \
          --icon-size 100 \
          --icon "Breakout.app" 175 120 \
          --hide-extension "Breakout.app" \
          --app-drop-link 425 120 \
          "Breakout.dmg" \
          "Breakout.app"

    - name: 上传 DMG 产物
      uses: actions/upload-artifact@v4
      with:
        name: breakout-dmg
        path: Breakout.dmg
        retention-days: 7

    - name: 上传 App Bundle 产物
      uses: actions/upload-artifact@v4
      with:
        name: breakout-app
        path: Breakout.app
        retention-days: 7

    - name: 运行基本测试
      run: |
        cd build
        # 由于 OpenGL 需要图形环境,这里只检查程序是否能正常加载
        # 在无头环境中运行会失败,所以只做链接检查
        otool -L ./Breakout
